from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.utils import to_categorical


(X_train, y_train), (X_test, y_test) = mnist.load_data()
X_train, X_test = X_train / 255.0, X_test / 255.0


y_train_cat = to_categorical(y_train)
y_test_cat = to_categorical(y_test)


model = Sequential([
    Flatten(input_shape=(28, 28)),
    Dense(128, activation='relu'),
    Dense(10, activation='softmax')
])

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])


model.fit(X_train, y_train_cat, epochs=3, batch_size=64, verbose=0)


loss, acc = model.evaluate(X_test, y_test_cat, verbose=0)
print(f"MNIST Image Classification Accuracy: {acc * 100:.2f}%")

OUTPUT:
MNIST Image Classification Accuracy: 97.86%
